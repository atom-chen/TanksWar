//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UILoadingWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UILoading), typeof(View));
		L.RegFunction("OnMessage", OnMessage);
		L.RegFunction("UpdateExtract", UpdateExtract);
		L.RegFunction("UpdateDownload", UpdateDownload);
		L.RegFunction("UpdateProgress", UpdateProgress);
		L.RegFunction("LoadEnd", LoadEnd);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("m_progressBar", get_m_progressBar, set_m_progressBar);
		L.RegVar("m_percent", get_m_percent, set_m_percent);
		L.RegVar("m_desc", get_m_desc, set_m_desc);
		L.RegVar("m_speed", get_m_speed, set_m_speed);
		L.RegVar("Instance", get_Instance, set_Instance);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnMessage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UILoading obj = (UILoading)ToLua.CheckObject(L, 1, typeof(UILoading));
			IMessage arg0 = (IMessage)ToLua.CheckObject(L, 2, typeof(IMessage));
			obj.OnMessage(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateExtract(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UILoading obj = (UILoading)ToLua.CheckObject(L, 1, typeof(UILoading));
			string arg0 = ToLua.CheckString(L, 2);
			obj.UpdateExtract(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateDownload(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UILoading obj = (UILoading)ToLua.CheckObject(L, 1, typeof(UILoading));
			string arg0 = ToLua.CheckString(L, 2);
			obj.UpdateDownload(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateProgress(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			UILoading obj = (UILoading)ToLua.CheckObject(L, 1, typeof(UILoading));
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			obj.UpdateProgress(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UILoading obj = (UILoading)ToLua.CheckObject(L, 1, typeof(UILoading));
			obj.LoadEnd();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_progressBar(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UILoading obj = (UILoading)o;
			ImageEx ret = obj.m_progressBar;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_progressBar on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_percent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UILoading obj = (UILoading)o;
			TextEx ret = obj.m_percent;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_percent on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_desc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UILoading obj = (UILoading)o;
			TextEx ret = obj.m_desc;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_desc on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_speed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UILoading obj = (UILoading)o;
			TextEx ret = obj.m_speed;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_speed on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Instance(IntPtr L)
	{
		try
		{
			ToLua.Push(L, UILoading.Instance);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_progressBar(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UILoading obj = (UILoading)o;
			ImageEx arg0 = (ImageEx)ToLua.CheckUnityObject(L, 2, typeof(ImageEx));
			obj.m_progressBar = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_progressBar on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_percent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UILoading obj = (UILoading)o;
			TextEx arg0 = (TextEx)ToLua.CheckUnityObject(L, 2, typeof(TextEx));
			obj.m_percent = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_percent on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_desc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UILoading obj = (UILoading)o;
			TextEx arg0 = (TextEx)ToLua.CheckUnityObject(L, 2, typeof(TextEx));
			obj.m_desc = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_desc on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_speed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UILoading obj = (UILoading)o;
			TextEx arg0 = (TextEx)ToLua.CheckUnityObject(L, 2, typeof(TextEx));
			obj.m_speed = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_speed on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Instance(IntPtr L)
	{
		try
		{
			UILoading arg0 = (UILoading)ToLua.CheckUnityObject(L, 2, typeof(UILoading));
			UILoading.Instance = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

